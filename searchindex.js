Search.setIndex({"docnames": ["covariance_functions", "gaussian_process", "index", "mean_functions", "noise_functions", "slice_sample"], "filenames": ["covariance_functions.rst", "gaussian_process.rst", "index.rst", "mean_functions.rst", "noise_functions.rst", "slice_sample.rst"], "titles": ["Covariance functions", "Gaussian processes", "GPyReg Documentation", "Mean functions", "Noise functions", "Slice sampling"], "terms": {"each": [0, 1, 3, 4, 5], "i": [0, 1, 3, 4, 5], "implement": [0, 3, 4, 5], "subclass": 0, "which": [0, 1, 5], "defin": [0, 3, 4, 5], "basic": 0, "interfac": 0, "an": [0, 1, 3, 4, 5], "instanc": [0, 1, 3, 4], "one": [0, 1, 3, 4, 5], "class": [0, 1, 2, 3, 4, 5], "pass": [0, 1, 3, 4], "gp": [0, 2, 3, 4], "initi": [0, 1, 3, 4, 5], "type": [0, 3, 4, 5], "gaussian": [0, 2, 3, 4], "process": [0, 2, 3, 4], "sourc": [0, 1, 3, 4, 5], "abstract": 0, "base": [0, 5], "kernel": 0, "comput": [0, 1, 3, 4, 5], "hyp": [0, 1, 3, 4], "ndarrai": [0, 1, 3, 4, 5], "x": [0, 1, 3, 4, 5], "x_star": [0, 1], "none": [0, 1, 4, 5], "compute_diag": 0, "bool": [0, 1, 3, 4, 5], "fals": [0, 1, 3, 4, 5], "compute_grad": [0, 1, 3, 4], "matrix": [0, 1, 5], "given": [0, 1, 3, 5], "train": [0, 1], "point": [0, 1, 2, 3, 4, 5], "test": [0, 3, 4, 5], "paramet": [0, 1, 3, 4, 5], "shape": [0, 1, 3, 4, 5], "cov_n": 0, "A": [0, 1, 3, 4, 5], "1d": [0, 1, 3, 4, 5], "arrai": [0, 1, 3, 4, 5], "hyperparamet": [0, 1, 3, 4], "where": [0, 1, 3, 4], "number": [0, 1, 3, 4, 5], "n": [0, 1, 3, 4, 5], "d": [0, 1, 3, 4, 5], "2d": [0, 3, 4], "row": [0, 1, 3, 4, 5], "m": [0, 1, 2, 3], "option": [0, 1, 3, 4, 5], "If": [0, 1, 4, 5], "thi": [0, 1, 3, 4, 5], "self": 0, "being": [0, 1, 2, 5], "default": [0, 1, 3, 4, 5], "whether": [0, 1, 3, 4, 5], "onli": [0, 1, 4, 5], "diagon": [0, 1], "gradient": [0, 1, 3, 4], "respect": [0, 1, 3, 4], "return": [0, 1, 3, 4, 5], "k": 0, "The": [0, 1, 2, 3, 4, 5], "true": [0, 1, 4, 5], "dk": 0, "rais": [0, 1, 3, 4, 5], "valueerror": [0, 1, 3, 4, 5], "when": [0, 1, 3, 4, 5], "ha": [0, 1, 3, 4, 5], "expect": [0, 1, 3, 4], "higher": [0, 3, 4], "dimens": [0, 1, 3, 4, 5], "get_bounds_info": [0, 3, 4], "y": [0, 1, 3, 4], "inform": [0, 2, 3, 4, 5], "lower": [0, 1, 3, 4, 5], "upper": [0, 1, 3, 4, 5], "plausibl": [0, 3, 4], "bound": [0, 1, 3, 4, 5], "1": [0, 1, 3, 4, 5], "target": [0, 1, 3, 4, 5], "cov_bound_info": 0, "dict": [0, 1, 3, 4, 5], "dictionari": [0, 1, 3, 4, 5], "contain": [0, 1, 3, 4, 5], "info": [0, 1, 3, 4], "follow": [0, 1, 3, 4], "element": [0, 1, 3, 4, 5], "lb": [0, 1, 3, 4, 5], "np": [0, 3, 4], "ub": [0, 1, 3, 4, 5], "plb": [0, 3, 4], "pub": [0, 3, 4], "x0": [0, 1, 3, 4, 5], "start": [0, 3, 4, 5], "hyperparameter_count": [0, 3, 4], "int": [0, 1, 3, 4, 5], "dimension": [0, 3], "count": [0, 3, 4], "hyperparameter_info": [0, 3, 4], "name": [0, 1, 3, 4], "set": [0, 1, 3, 4, 5], "them": [0, 3, 4], "other": [0, 3, 4], "part": [0, 3, 4], "program": [0, 3, 4], "hyper_info": [0, 3, 4], "array_lik": [0, 1, 3, 4, 5], "list": [0, 1, 3, 4], "tupl": [0, 1, 3, 4], "order": [0, 3, 4], "thei": [0, 3, 4], "ar": [0, 1, 3, 4, 5], "ration": 0, "quadrat": [0, 3], "ard": 0, "degre": [0, 1], "3": [0, 1, 2, 5], "5": [0, 1], "current": [0, 1, 2, 5], "support": [0, 1, 2], "some": 0, "provid": [0, 1, 4], "except": 0, "squar": [0, 1], "exponenti": [0, 1], "modul": [1, 2], "main": 1, "entri": [1, 2], "work": [1, 5], "specifi": [1, 5], "covari": [1, 2], "mean": [1, 2], "nois": [1, 2], "function": [1, 2, 5], "Then": 1, "its": [1, 3, 4], "variou": 1, "method": [1, 5], "can": [1, 2, 5], "us": [1, 2, 5], "fit": [1, 2], "data": [1, 2, 5], "make": 1, "predict": [1, 5], "plot": 1, "etc": 1, "object": [1, 5], "singl": 1, "from": [1, 5], "covariance_funct": [1, 2], "mean_funct": [1, 2], "noise_funct": [1, 2], "bounds_to_dict": 1, "lower_bound": 1, "upper_bound": 1, "convert": 1, "hyp_n": 1, "bounds_dict": 1, "clean": 1, "auxiliari": 1, "structur": 1, "thu": 1, "reduc": 1, "memori": 1, "usag": 1, "These": 1, "reconstruct": 1, "call": 1, "updat": 1, "compute_posterior": 1, "furthermor": 1, "temporary_data": 1, "attribut": [1, 5], "clear": 1, "s2": [1, 4], "hyp0": 1, "replac": 1, "varianc": [1, 4], "possibl": [1, 5], "opts_n": 1, "optim": 1, "run": [1, 5], "init_n": 1, "1024": 1, "design": 1, "size": [1, 5], "df_base": 1, "7": [1, 5], "freedom": 1, "student": 1, "": [1, 5], "t": 1, "prior": [1, 5], "n_sampl": 1, "10": [1, 5], "sampl": [1, 2], "thin": [1, 5], "slice": [1, 2], "burn": [1, 5], "str": 1, "user": [1, 2, 4, 5], "ani": 1, "valu": [1, 3, 5], "nan": [1, 5], "fill": 1, "recommend": 1, "all": [1, 5], "init_method": 1, "sobol": 1, "rand": 1, "random": [1, 5], "sequenc": [1, 5], "space": 1, "sampler_nam": 1, "slicesampl": 1, "sampler": [1, 5], "tol_opt": 1, "float": 1, "1e": 1, "toler": 1, "stop": 1, "tol_opt_mcmc": 1, "preliminari": 1, "do": 1, "mcmc": 1, "width": [1, 5], "appropri": 1, "ones": 1, "hyp_sampl": 1, "optimize_result": 1, "optimizeresult": 1, "result": [1, 5], "repres": [1, 5], "For": [1, 5], "more": [1, 2], "detail": [1, 2, 5], "see": [1, 5], "scipi": 1, "minim": 1, "sampling_result": 1, "wa": [1, 2], "perform": [1, 5], "otherwis": [1, 4, 5], "get_bound": 1, "get": 1, "get_hyperparamet": 1, "as_arrai": 1, "have": [1, 5], "been": [1, 5], "yet": 1, "form": 1, "get_prior": 1, "hyper_prior": 1, "get_recommended_bound": 1, "present": 1, "overrid": 1, "correspond": [1, 5], "doe": [1, 4, 5], "hyperparameters_from_dict": 1, "hyp_dict_list": 1, "One": 1, "also": [1, 5], "just": 1, "instead": 1, "hyp_arr": 1, "length": 1, "hyperparameters_to_dict": 1, "interpret": 1, "hyp_dict": 1, "dictonari": 1, "input": [1, 4, 5], "wrong": 1, "log_likelihood": 1, "posit": [1, 5], "log": [1, 5], "margin": [1, 5], "likelihood": 1, "either": [1, 5], "lz": 1, "dlz": 1, "log_posterior": 1, "ad": 1, "unnorm": 1, "lz_plus_posterior": 1, "dlz_plus_d_posterior": 1, "linalgerror": 1, "choleski": 1, "decomposit": 1, "fail": 1, "multipl": 1, "time": [1, 5], "even": 1, "numer": 1, "stabil": 1, "delta_i": 1, "max_min_flag": 1, "profil": 1, "center": [1, 2, 3], "around": 1, "panel": 1, "show": 1, "sd": 1, "vari": 1, "wherea": 1, "off": [1, 5], "2": [1, 5], "contour": 1, "standard": 1, "deviat": 1, "abov": [1, 5], "below": [1, 2, 5], "In": [1, 5], "black": [1, 2], "line": 1, "indic": 1, "locat": 1, "refer": [1, 5], "rang": [1, 5], "approxim": 1, "bracket": [1, 5], "y0": 1, "noth": [1, 4], "minimum": 1, "maximum": 1, "y_star": 1, "s2_star": 1, "add_nois": 1, "separate_sampl": 1, "return_lpd": 1, "we": [1, 5], "want": 1, "add": [1, 4], "separ": 1, "averag": 1, "densiti": [1, 5], "lpd": 1, "mu": 1, "request": [1, 5], "sample_n": 1, "while": [1, 4, 5], "predict_ful": 1, "full": [1, 5], "cov": 1, "quad": 1, "sigma": 1, "compute_var": 1, "bayesian": [1, 2, 5], "quadratur": 1, "integr": 1, "measur": 1, "f": 1, "conput": 1, "f_var": 1, "random_funct": 1, "draw": [1, 5], "evalu": [1, 4, 5], "drawn": [1, 5], "f_star": 1, "set_bound": 1, "need": [1, 5], "appear": 1, "specif": 1, "miss": 1, "set_hyperparamet": 1, "hyp_new": 1, "new": 1, "amount": 1, "equival": [1, 5], "set_prior": 1, "remov": 1, "unknown": [1, 5], "x_new": 1, "y_new": 1, "s2_new": 1, "old": 1, "narrai": 1, "depend": [1, 4], "alpha": 1, "sw": 1, "l": 1, "sn2_mult": 1, "lchol": 1, "lightweight": 2, "packag": 2, "regress": 2, "python": 2, "It": [2, 5], "develop": 2, "pyvbmc": 2, "effici": 2, "box": 2, "infer": [2, 5], "usabl": 2, "standalon": 2, "avail": 2, "via": 2, "pip": 2, "conda": 2, "forg": 2, "channel": 2, "requir": [2, 4], "version": 2, "9": 2, "newer": 2, "primari": 2, "construct": 2, "model": 2, "found": 2, "link": 2, "gaussian_process": 2, "slice_sampl": 2, "index": 2, "search": 2, "page": 2, "releas": 2, "under": 2, "term": 2, "bsd": 2, "claus": 2, "code": [2, 5], "github": 2, "member": 2, "past": 2, "machin": [2, 5], "human": 2, "intellig": 2, "lab": 2, "univers": [2, 5], "helsinki": 2, "finnish": 2, "artifici": 2, "fcai": 2, "own": [3, 4], "constant": [3, 4, 5], "mean_n": 3, "dm": 3, "mean_bound_info": 3, "static": 3, "_": 3, "unus": 3, "neg": 3, "zero": [3, 5], "so": [4, 5], "far": [4, 5], "constant_add": 4, "user_provided_add": 4, "scale_user_provid": 4, "rectified_linear_output_dependent_add": 4, "total": [4, 5], "obtain": [4, 5], "sum": [4, 5], "independ": [4, 5], "contribut": [4, 5], "featur": 4, "scale": [4, 5], "uncertainti": 4, "rectifi": 4, "linear": 4, "output": 4, "observ": 4, "noise_n": 4, "estim": [4, 5], "associ": 4, "sn2": 4, "scalar": [4, 5], "sinc": 4, "chang": 4, "same": [4, 5], "dsn2": 4, "noise_bound_info": 4, "log_f": 5, "distribut": 5, "probabl": 5, "coordin": 5, "wise": 5, "callabl": 5, "pdf": 5, "take": 5, "argument": 5, "minu": 5, "normal": 5, "known": 5, "note": 5, "vector": 5, "column": 5, "differ": 5, "latter": 5, "case": 5, "per": 5, "individu": 5, "f_val": 5, "know": 5, "error": 5, "wide": 5, "applic": 5, "criterion": 5, "waic": 5, "must": 5, "within": 5, "domain": 5, "variabl": 5, "typic": 5, "assum": 5, "th": 5, "finit": 5, "By": 5, "adapt": 5, "dure": 5, "period": 5, "choic": 5, "crucial": 5, "outsid": 5, "inf": 5, "unbound": 5, "fix": 5, "step_out": 5, "step": 5, "out": 5, "action": 5, "window": 5, "displai": 5, "summari": 5, "level": 5, "log_prior": 5, "allow": 5, "over": 5, "gener": 5, "end": 5, "disabl": 5, "best": 5, "alreadi": 5, "good": 5, "diagnost": 5, "converg": 5, "4": 5, "real": 5, "inspir": 5, "matlab": 5, "iain": 5, "murrai": 5, "pseudo": 5, "r": 5, "neal": 5, "2003": 5, "annal": 5, "statist": 5, "31": 5, "p705": 5, "67": 5, "j": 5, "mackai": 5, "theori": 5, "learn": 5, "algorithm": 5, "cambridg": 5, "press": 5, "p374": 5, "watanab": 5, "2010": 5, "asymptot": 5, "bay": 5, "cross": 5, "valid": 5, "singular": 5, "journal": 5, "research": 5, "11": 5, "p3571": 5, "94": 5, "gelman": 5, "et": 5, "al": 5, "2013": 5, "analysi": 5, "vol": 5, "boca": 5, "raton": 5, "fl": 5, "usa": 5, "chapman": 5, "hall": 5, "crc": 5, "arbitrari": 5, "omit": 5, "after": 5, "first": 5, "befor": 5, "record": 5, "round": 5, "third": 5, "0": 5, "re": 5, "actual": 5, "NOT": 5, "includ": 5, "exit_flag": 5, "exit": 5, "condit": 5, "reach": 5, "explicit": 5, "violat": 5, "ensur": 5, "statu": 5, "No": 5, "detect": 5, "effect": 5, "much": 5, "than": 5, "least": 5, "lack": 5, "procedur": 5, "potenti": 5, "reduct": 5, "factor": 5, "eff_n": 5, "integ": 5, "e": 5, "g": 5}, "objects": {"gpyreg": [[1, 0, 1, "", "GP"]], "gpyreg.GP": [[1, 1, 1, "", "bounds_to_dict"], [1, 1, 1, "", "clean"], [1, 1, 1, "", "fit"], [1, 1, 1, "", "get_bounds"], [1, 1, 1, "", "get_hyperparameters"], [1, 1, 1, "", "get_priors"], [1, 1, 1, "", "get_recommended_bounds"], [1, 1, 1, "", "hyperparameters_from_dict"], [1, 1, 1, "", "hyperparameters_to_dict"], [1, 1, 1, "", "log_likelihood"], [1, 1, 1, "", "log_posterior"], [1, 1, 1, "", "plot"], [1, 1, 1, "", "predict"], [1, 1, 1, "", "predict_full"], [1, 1, 1, "", "quad"], [1, 1, 1, "", "random_function"], [1, 1, 1, "", "set_bounds"], [1, 1, 1, "", "set_hyperparameters"], [1, 1, 1, "", "set_priors"], [1, 1, 1, "", "update"]], "gpyreg.covariance_functions": [[0, 0, 1, "", "AbstractKernel"], [0, 0, 1, "", "Matern"], [0, 0, 1, "", "RationalQuadraticARD"], [0, 0, 1, "", "SquaredExponential"]], "gpyreg.covariance_functions.AbstractKernel": [[0, 1, 1, "", "compute"], [0, 1, 1, "", "get_bounds_info"], [0, 1, 1, "", "hyperparameter_count"], [0, 1, 1, "", "hyperparameter_info"]], "gpyreg.covariance_functions.Matern": [[0, 1, 1, "", "compute"]], "gpyreg.covariance_functions.RationalQuadraticARD": [[0, 1, 1, "", "compute"], [0, 1, 1, "", "get_bounds_info"], [0, 1, 1, "", "hyperparameter_count"], [0, 1, 1, "", "hyperparameter_info"]], "gpyreg.covariance_functions.SquaredExponential": [[0, 1, 1, "", "compute"]], "gpyreg.gaussian_process": [[1, 0, 1, "", "Posterior"]], "gpyreg.mean_functions": [[3, 0, 1, "", "ConstantMean"], [3, 0, 1, "", "NegativeQuadratic"], [3, 0, 1, "", "ZeroMean"]], "gpyreg.mean_functions.ConstantMean": [[3, 1, 1, "", "compute"], [3, 1, 1, "", "get_bounds_info"], [3, 1, 1, "", "hyperparameter_count"], [3, 1, 1, "", "hyperparameter_info"]], "gpyreg.mean_functions.NegativeQuadratic": [[3, 1, 1, "", "compute"], [3, 1, 1, "", "get_bounds_info"], [3, 1, 1, "", "hyperparameter_count"], [3, 1, 1, "", "hyperparameter_info"]], "gpyreg.mean_functions.ZeroMean": [[3, 1, 1, "", "compute"], [3, 1, 1, "", "get_bounds_info"], [3, 1, 1, "", "hyperparameter_count"], [3, 1, 1, "", "hyperparameter_info"]], "gpyreg.noise_functions": [[4, 0, 1, "", "GaussianNoise"]], "gpyreg.noise_functions.GaussianNoise": [[4, 1, 1, "", "compute"], [4, 1, 1, "", "get_bounds_info"], [4, 1, 1, "", "hyperparameter_count"], [4, 1, 1, "", "hyperparameter_info"]], "gpyreg.slice_sample": [[5, 0, 1, "", "SliceSampler"]], "gpyreg.slice_sample.SliceSampler": [[5, 1, 1, "", "sample"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"covari": 0, "function": [0, 3, 4], "gpyreg": [0, 1, 2, 3, 4, 5], "covariance_funct": 0, "abstractkernel": 0, "rationalquadraticard": 0, "matern": 0, "squaredexponenti": 0, "gaussian": 1, "process": 1, "gaussian_process": 1, "gp": 1, "posterior": 1, "document": 2, "what": 2, "i": 2, "instal": 2, "content": 2, "indic": 2, "tabl": 2, "licens": 2, "sourc": 2, "acknowledg": 2, "mean": 3, "mean_funct": 3, "constantmean": 3, "negativequadrat": 3, "zeromean": 3, "nois": 4, "noise_funct": 4, "gaussiannois": 4, "slice": 5, "sampl": 5, "slice_sampl": 5, "slicesampl": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 57}, "alltitles": {"Covariance functions": [[0, "covariance-functions"]], "gpyreg.covariance_functions": [[0, "gpyreg-covariance-functions"]], "AbstractKernel": [[0, "abstractkernel"]], "RationalQuadraticARD": [[0, "rationalquadraticard"]], "Matern": [[0, "matern"]], "SquaredExponential": [[0, "squaredexponential"]], "Gaussian processes": [[1, "gaussian-processes"]], "gpyreg.gaussian_process": [[1, "gpyreg-gaussian-process"]], "GP": [[1, "gp"]], "Posterior": [[1, "posterior"]], "GPyReg Documentation": [[2, "gpyreg-documentation"]], "What is it?": [[2, "what-is-it"]], "Installation": [[2, "installation"]], "Documentation": [[2, "documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "License and source": [[2, "license-and-source"]], "Acknowledgments": [[2, "acknowledgments"]], "Mean functions": [[3, "mean-functions"]], "gpyreg.mean_functions": [[3, "gpyreg-mean-functions"]], "ConstantMean": [[3, "constantmean"]], "NegativeQuadratic": [[3, "negativequadratic"]], "ZeroMean": [[3, "zeromean"]], "Noise functions": [[4, "noise-functions"]], "gpyreg.noise_functions": [[4, "gpyreg-noise-functions"]], "GaussianNoise": [[4, "gaussiannoise"]], "Slice sampling": [[5, "slice-sampling"]], "gpyreg.slice_sample": [[5, "gpyreg-slice-sample"]], "SliceSampler": [[5, "slicesampler"]]}, "indexentries": {"abstractkernel (class in gpyreg.covariance_functions)": [[0, "gpyreg.covariance_functions.AbstractKernel"]], "matern (class in gpyreg.covariance_functions)": [[0, "gpyreg.covariance_functions.Matern"]], "rationalquadraticard (class in gpyreg.covariance_functions)": [[0, "gpyreg.covariance_functions.RationalQuadraticARD"]], "squaredexponential (class in gpyreg.covariance_functions)": [[0, "gpyreg.covariance_functions.SquaredExponential"]], "compute() (gpyreg.covariance_functions.abstractkernel method)": [[0, "gpyreg.covariance_functions.AbstractKernel.compute"]], "compute() (gpyreg.covariance_functions.matern method)": [[0, "gpyreg.covariance_functions.Matern.compute"]], "compute() (gpyreg.covariance_functions.rationalquadraticard method)": [[0, "gpyreg.covariance_functions.RationalQuadraticARD.compute"]], "compute() (gpyreg.covariance_functions.squaredexponential method)": [[0, "gpyreg.covariance_functions.SquaredExponential.compute"]], "get_bounds_info() (gpyreg.covariance_functions.abstractkernel method)": [[0, "gpyreg.covariance_functions.AbstractKernel.get_bounds_info"]], "get_bounds_info() (gpyreg.covariance_functions.rationalquadraticard method)": [[0, "gpyreg.covariance_functions.RationalQuadraticARD.get_bounds_info"]], "hyperparameter_count() (gpyreg.covariance_functions.abstractkernel method)": [[0, "gpyreg.covariance_functions.AbstractKernel.hyperparameter_count"]], "hyperparameter_count() (gpyreg.covariance_functions.rationalquadraticard method)": [[0, "gpyreg.covariance_functions.RationalQuadraticARD.hyperparameter_count"]], "hyperparameter_info() (gpyreg.covariance_functions.abstractkernel method)": [[0, "gpyreg.covariance_functions.AbstractKernel.hyperparameter_info"]], "hyperparameter_info() (gpyreg.covariance_functions.rationalquadraticard method)": [[0, "gpyreg.covariance_functions.RationalQuadraticARD.hyperparameter_info"]], "gp (class in gpyreg)": [[1, "gpyreg.GP"]], "posterior (class in gpyreg.gaussian_process)": [[1, "gpyreg.gaussian_process.Posterior"]], "bounds_to_dict() (gpyreg.gp method)": [[1, "gpyreg.GP.bounds_to_dict"]], "clean() (gpyreg.gp method)": [[1, "gpyreg.GP.clean"]], "fit() (gpyreg.gp method)": [[1, "gpyreg.GP.fit"]], "get_bounds() (gpyreg.gp method)": [[1, "gpyreg.GP.get_bounds"]], "get_hyperparameters() (gpyreg.gp method)": [[1, "gpyreg.GP.get_hyperparameters"]], "get_priors() (gpyreg.gp method)": [[1, "gpyreg.GP.get_priors"]], "get_recommended_bounds() (gpyreg.gp method)": [[1, "gpyreg.GP.get_recommended_bounds"]], "hyperparameters_from_dict() (gpyreg.gp method)": [[1, "gpyreg.GP.hyperparameters_from_dict"]], "hyperparameters_to_dict() (gpyreg.gp method)": [[1, "gpyreg.GP.hyperparameters_to_dict"]], "log_likelihood() (gpyreg.gp method)": [[1, "gpyreg.GP.log_likelihood"]], "log_posterior() (gpyreg.gp method)": [[1, "gpyreg.GP.log_posterior"]], "plot() (gpyreg.gp method)": [[1, "gpyreg.GP.plot"]], "predict() (gpyreg.gp method)": [[1, "gpyreg.GP.predict"]], "predict_full() (gpyreg.gp method)": [[1, "gpyreg.GP.predict_full"]], "quad() (gpyreg.gp method)": [[1, "gpyreg.GP.quad"]], "random_function() (gpyreg.gp method)": [[1, "gpyreg.GP.random_function"]], "set_bounds() (gpyreg.gp method)": [[1, "gpyreg.GP.set_bounds"]], "set_hyperparameters() (gpyreg.gp method)": [[1, "gpyreg.GP.set_hyperparameters"]], "set_priors() (gpyreg.gp method)": [[1, "gpyreg.GP.set_priors"]], "update() (gpyreg.gp method)": [[1, "gpyreg.GP.update"]], "constantmean (class in gpyreg.mean_functions)": [[3, "gpyreg.mean_functions.ConstantMean"]], "negativequadratic (class in gpyreg.mean_functions)": [[3, "gpyreg.mean_functions.NegativeQuadratic"]], "zeromean (class in gpyreg.mean_functions)": [[3, "gpyreg.mean_functions.ZeroMean"]], "compute() (gpyreg.mean_functions.constantmean method)": [[3, "gpyreg.mean_functions.ConstantMean.compute"]], "compute() (gpyreg.mean_functions.negativequadratic method)": [[3, "gpyreg.mean_functions.NegativeQuadratic.compute"]], "compute() (gpyreg.mean_functions.zeromean method)": [[3, "gpyreg.mean_functions.ZeroMean.compute"]], "get_bounds_info() (gpyreg.mean_functions.constantmean method)": [[3, "gpyreg.mean_functions.ConstantMean.get_bounds_info"]], "get_bounds_info() (gpyreg.mean_functions.negativequadratic method)": [[3, "gpyreg.mean_functions.NegativeQuadratic.get_bounds_info"]], "get_bounds_info() (gpyreg.mean_functions.zeromean method)": [[3, "gpyreg.mean_functions.ZeroMean.get_bounds_info"]], "hyperparameter_count() (gpyreg.mean_functions.constantmean static method)": [[3, "gpyreg.mean_functions.ConstantMean.hyperparameter_count"]], "hyperparameter_count() (gpyreg.mean_functions.negativequadratic static method)": [[3, "gpyreg.mean_functions.NegativeQuadratic.hyperparameter_count"]], "hyperparameter_count() (gpyreg.mean_functions.zeromean static method)": [[3, "gpyreg.mean_functions.ZeroMean.hyperparameter_count"]], "hyperparameter_info() (gpyreg.mean_functions.constantmean static method)": [[3, "gpyreg.mean_functions.ConstantMean.hyperparameter_info"]], "hyperparameter_info() (gpyreg.mean_functions.negativequadratic static method)": [[3, "gpyreg.mean_functions.NegativeQuadratic.hyperparameter_info"]], "hyperparameter_info() (gpyreg.mean_functions.zeromean static method)": [[3, "gpyreg.mean_functions.ZeroMean.hyperparameter_info"]], "gaussiannoise (class in gpyreg.noise_functions)": [[4, "gpyreg.noise_functions.GaussianNoise"]], "compute() (gpyreg.noise_functions.gaussiannoise method)": [[4, "gpyreg.noise_functions.GaussianNoise.compute"]], "get_bounds_info() (gpyreg.noise_functions.gaussiannoise method)": [[4, "gpyreg.noise_functions.GaussianNoise.get_bounds_info"]], "hyperparameter_count() (gpyreg.noise_functions.gaussiannoise method)": [[4, "gpyreg.noise_functions.GaussianNoise.hyperparameter_count"]], "hyperparameter_info() (gpyreg.noise_functions.gaussiannoise method)": [[4, "gpyreg.noise_functions.GaussianNoise.hyperparameter_info"]], "slicesampler (class in gpyreg.slice_sample)": [[5, "gpyreg.slice_sample.SliceSampler"]], "sample() (gpyreg.slice_sample.slicesampler method)": [[5, "gpyreg.slice_sample.SliceSampler.sample"]]}})